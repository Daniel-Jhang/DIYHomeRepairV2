@model DIY_v2.Models.Product

@{
    ViewBag.Title = "新增產品";
    Layout = "../Shared/_LayoutForbackendUI.cshtml";
}
<style>
    .title{
        font-size:36px;
    }
</style>
<style>
    .productImage {
        width: 300px;
        height: 300px;
    }


    body {
        font-size: 24px;
    }

    input[type="text"] {
        font-size: 24px;
    }

    select {
        font-size: 24px;
    }
</style>

<div class="col-md-10">

    <div class="col-md-2"></div>
    <div style="font-size:20px;margin-top:-5px;" class="col-md-10"><span style="font-size:35px;" class="title">新增產品</span><span><input type="button" class="quick-input" onclick="quickinput()" value="+"></span></div>
    @using (Html.BeginForm("AddProduct", "Backend", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal" style="margin-top:10px;">
            
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @*<div class="form-group">
                    @Html.LabelFor(model => model.ProductID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductID, new { htmlAttributes = new { @class = "form-control" } })
                        <b class="text-danger">@ViewBag.IDMessage</b>
                        @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div style="font-size:20px;" class="form-group">
                @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div style="font-size:20px;" class="form-group">
                @Html.LabelFor(model => model.ProductPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div style="font-size:20px;" class="form-group">
                @Html.LabelFor(model => model.ProductImage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <img class="productImage" src="~/Images/ToolImages/defaultImage.jpg" id="showImg" name="photo">
                    <input type="file" name="photo" onchange="selectImgFile(this.files)" />

                </div>
            </div>

            <div style="font-size:20px;" class="form-group">
                @Html.LabelFor(model => model.ProductCost, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductCost, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductCost, "", new { @class = "text-danger" })
                </div>
            </div>

            <div  style="font-size:20px;"class="form-group">
                @Html.LabelFor(model => model.InStock, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InStock, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InStock, "", new { @class = "text-danger" })
                </div>
            </div>

            <div style="font-size:20px;" class="form-group">
               <label class="control-label col-md-2">產品類別</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ProductCategoryID, (IEnumerable<SelectListItem>)@Session["ct"], new { @class = "form-control", name = "ProductCategoryID" , style = " font-size: 24px;" })
                    @Html.ValidationMessageFor(model => model.ProductCategoryID, "", new { @class = "text-danger" })

                </div>
            </div>
            <div  style="font-size:20px;"class="form-group">
                @Html.LabelFor(model => model.ProductDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <textarea  name="ProductDescription" style="height:200px; width:100%;"></textarea>
                    @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })

                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input style="font-size:20px;" type="submit" value="新增" class="btn btn-default btn-primary" />
                </div>
            </div>
        </div>
    }

    @*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@


</div>

<script>
    function quickinput() {

        $("input[name='ProductName']").val("【ARCA】 專業級活動板手");
        $("input[name='ProductPrice']").val("450");
        $("input[name='ProductCost']").val("315");
        $("input[name='InStock']").val("300");
        $("textarea[name='ProductDescription']").text("◆鉻釩鋼材質\r\n◆整支熱鍛、熱處理\r\n◆轉動順更省力\r\n\r\n◆大開口(大18 % -25 %)\r\n◆手柄加厚60 %, 減緩操作時的疲勞\r\n◆超大扭力\r\n◆黑色處理");
        $("select[name='ProductCategoryID']").val("Ct009")

    }
    function selectImgFile(files) {
        if (!files.length) {
            return false;
        }

        let file = files[0];
        let reader = new FileReader();
        reader.onload = function () {
            document.getElementById('showImg').src = this.result;
        };

        reader.readAsDataURL(file);
    }
</script>
